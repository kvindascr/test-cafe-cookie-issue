worker_processes 1;

events {
    worker_connections 1024;
}

error_log /dev/null;


http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    client_max_body_size 100M;
    client_body_buffer_size 100M;

    gzip on;
    gzip_types
    application/javascript
    application/json
    application/manifest+json
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/bmp
    image/svg+xml
    text/cache-manifest
    text/calendar
    text/css
    text/javascript
    text/markdown
    text/plain
    text/x-cross-domain-policy;
    gzip_proxied no-cache no-store private expired auth;
    gzip_min_length 1000;

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    server {
        listen 80 default_server;

        server_name _;

        access_log off;
        error_log /dev/null;

        return 301 https://$host$request_uri;
    }

    # react dev tools for mobile
    # see https://www.npmjs.com/package/react-devtools
    # Referenced in public/mobile-react-devtools.js
    server {
        proxy_ssl_verify off;
        listen 8096 ssl;
        server_name local.myapp.app:8096;

        ssl_certificate /etc/nginx/local.myapp.app.crt;
        ssl_certificate_key /etc/nginx/local.myapp.app.key;

        location / {
            proxy_set_header Host localhost:8097;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header X-Frame-Options SAMEORIGIN;
            proxy_set_header Connection $http_connection;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 900;
            client_max_body_size 0;
            proxy_buffering off;
            proxy_redirect off;
            add_header X-Accel-Buffering no;
            proxy_pass http://host.docker.internal:8097;
        }
    }

    server {
        proxy_ssl_verify off;
        listen 443 ssl;
        server_name local.myapp.app;
        proxy_set_header Origin https://local.myapp.app;

        ssl_certificate /etc/nginx/local.myapp.app.crt;
        ssl_certificate_key /etc/nginx/local.myapp.app.key;

        client_max_body_size 100M;
        client_body_buffer_size 100M;

        location / {
            proxy_set_header Host localhost:3000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header X-Frame-Options SAMEORIGIN;
            proxy_set_header Connection $http_connection;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 900;
            client_max_body_size 0;
            proxy_buffering off;
            proxy_redirect off;
            add_header X-Accel-Buffering no;
            proxy_pass http://host.docker.internal:3000;
        }

        # For hot module reloading
        location /sockjs-node/ {
            proxy_set_header Host localhost:3000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;

            proxy_pass http://host.docker.internal:3000/sockjs-node/;

            proxy_redirect off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location = /backend {
            proxy_set_header Host localhost:4000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Frame-Options SAMEORIGIN;
            proxy_pass_header Set-Cookie;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_pass http://host.docker.internal:4000;

            client_max_body_size 100M;
            client_body_buffer_size 100M;
        }

        location = /backend/test-cookies {
            proxy_set_header Host localhost:4000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Frame-Options SAMEORIGIN;
            proxy_pass_header Set-Cookie;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_pass http://host.docker.internal:4000/test-cookies;

            client_max_body_size 100M;
            client_body_buffer_size 100M;
        }
    }
}
